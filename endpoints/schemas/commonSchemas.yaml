openapi: "3.0.0"
info:
  version: 4.0.2
  title: Common Schemas
  description: Common Schemas, based on TIP 4.0.0 documentation
  termsOfService: http://placeholderdomain.io/terms/ # TODO
  contact:
    name: TIP Forum # TODO
    email: tip-mailing-list@tbd.com # TODO
    url: http://placeholderdomain.io # TODO
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT # TODO 

paths: {} # no paths

components:
  schemas:
    commonPayloadHeader:
      description: The commonPayloadHeader schema contains the common properties that are included with all payloads. This schema acquires both (1) a buyer- or seller-generated unique value for the transaction and (2) the creation date and time.
      required:
        - tipVersion
        - transactionNum
        - timeStamp
      properties:
        tipVersion:
          description: Interface TIP version
          type: string  # TODO any constraints?
        transactionId:
          description: The buyer- or seller-generated unique value for a transaction.
          type: string  # TODO any constraints?
        timeStamp: 
          description: This is the date and time when the transaction was created.
          type: string # TODO should this be expressed as an Epoch date instead (32 bit integer)?
          format: date-time

    encodededPayloadWrapper:
      description: Use the encodedPayloadWrapper schema with non-JSON payload formats, such as TVB 3.2 or DARE, to gather information about the payload and its encoding.
      required:
        - CommonPayloadHeader
        - payloadData
        - payloadType
        - payloadEncoding
      properties:
        CommonPayloadHeader:
          $ref: '#/components/schemas/commonPayloadHeader'
        payloadData:
          description: The encoded payload data.
          type: string
        payloadType:
          description: Format of the payload data
          type: string
          enum: [TVB3.2, DARE]
        payloadEncoding: 
          description: This is the encoding method for the payload data.
          type: string
          enum: [Base64]

    transactionHeader:
      description: The transactionHeader schema contains a buyer- or seller-generated unique number and a transaction type of New, Changed, or Cancelled. Additionally, this schema includes both (1) the unique identifier and the name of the trading partner, and (2) the date and time when the transaction was created.
      required:
        - version
        - transactionNum
        - transactionType
        - sourceID
        - sourceName
        - timeStamp
      properties:
        tipVersion:
          description: The TIP version of the interface.
          type: string  # TODO any constraints?
        transactionNum:
          description: This is the buyer- or seller-generated unique number for a transaction.
          type: integer
          format: int64
        transactionType:
          description: This indicates the transaction type (New, Changed, or Cancelled).
          type: string
          enum: [New, Changed, Cancelled]
        sourceID: 
          description: This indicates the unique identifier for the source _trading partner_.
          type: string # TODO any constraints?
        sourceName:
          description: This indicates the name for the source _trading partner_.
          type: string
        timeStamp: 
          description: This is the date and time when the transaction was created.
          type: string # TODO should this be expressed as an Epoch date instead (32 bit integer)?
          format: date-time

    mediaOutlet:
      description: The mediaOutlet schema packages a unique identifier and a name into a single object. The properties include (1) a persistent identifier for a station or network, (2) the station or network name, (3) a string that identifies the station or network, and (4) any reference information for the external buyer. # TODO generic description
      required:
        - mediaOutletId
        - mediaOutletName
        - mediaOutletChannel
        - mediaOutletReference
      properties:
        mediaOutlet:
          description: Unique persistent identifier for the station or network
          type: string  # TODO any constraints?
        mediaOutletName:
          description: Station or network name associated to mediaOutletId
          type: string  # TODO any constraints?
        mediaOutletChannel:
          description: String	Station or network station identification (Channel) 
          type: string  # TODO any constraints?
        mediaOutletReference:
          description: Buyer external mediaoutlet reference information
          $ref: '#/components/schemas/mediaOutlet'

    Advertiser:
      description: The Advertiser schema packages a unique identifier and a name into a single object. The properties include (1) a persistent identifier for the advertiser and/or client, (2) a string for the advertiser name, and (3) any reference information for the external advertiser for the buyer. # TODO generic description
      required:
        - advertiserId
        - advertiserName
        - advertiserReference
      properties:
        advertiserId:
          description: Unique persistent identifier for the advertiser/client
          type: string  # TODO any constraints?
        advertiserName:
          description: String	Advertiser name 
          type: string  # TODO any constraints?
        advertiserReference:
          description: Object	Buyer external advertiser reference information
          $ref: '#/components/schemas/Advertiser'

    Brand:
      description: The Brand schema packages a unique identifier and a name into a single object. The properties include (1) a persitent brand identifier, (2) the brand name, and (3) information regarding external brand references. # TODO generic description
      required:
        - brandId
        - brandName
        - brandRefererence
      properties:
        brandId:
          description: Unique persistent identifier for the brand
          type: string  # TODO any constraints?
        brandName:
          description: Brand Name
          type: string  # TODO any constraints?
        brandRefererence:
          description: Brand external brand reference information
          $ref: '#/components/schemas/Brand'

    buyerLocation:
      description: The buyerLocation schema packages a unique identifier and a name into a single object. The properties include (1) a persistent identifier for the buying organiztion, traffic agency and/or media supplier, (2) the name and location of the buyer, and (3) information regarding the external buyer location. # TODO generic description
      required:
        - buyerLocationId
        - buyerLocationName
        - buyerLocationReference
      properties:
        buyerLocationId:
          description: Unique persistent identifier for the Buying organization or  trafficking agency and /or the supplier of the media
          type: string  # TODO any constraints?
        buyerLocationName:
          description: Buying organization name and location
          type: string  # TODO any constraints?
        buyerLocationReference:
          description: Buyer external buyer location reference information
          $ref: '#/components/schemas/buyerLocation'

    Product:
      description: The Product schema packages a unique identifier and a name into a single object. The properties include (1) a persistent product identifier and (2) a buyer external product reference. # TODO generic description
      required:
        - productId
        - productName
        - productReference
      properties:
        productId:
          description: Unique persistent identifier for the product
          type: string  # TODO any constraints?
        productName:
          description: Brand Name
          type: string  # TODO any constraints?
        productReference:
          description: Buyer external product reference 
          $ref: '#/components/schemas/Product'

    audienceSegment:
      description: The audienceSegment schema packages a unique identifier and a name into a single object. The properties include (1) a persistent audience-segment identifier, (2) an audience-segment name, (3) a buyer external audience segment reference, (4) a unique audience-segment identifier, (5) an audience-segment name, (6) a viewership elements type, and (7) a universe type. # TODO generic description
      required:
        - audienceSegmentId
        - audienceSegmentName
        - audienceSegmentReference
        - ratingSource
        - ratingType
        - viewershipType
        - universeType
        - primaryIndicator
        - Guarantee
      properties:  
        audienceSegmentId:
          description: Unique persistent identifier for audience segment
          type: string  # TODO any constraints?
        audienceSegmentName:
          description: Audience Segment Name 
          type: string  # TODO any constraints?
        audienceSegmentReference:
          description: Buyer external audience segment reference
          type: string  # TODO any constraints?
        ratingSource:
          description: Unique identifier for audience segment
          type: string
          enum: [Nielsen, ComScore, Custom] # TODO is Custom a constant?
        ratingType:
          description: Audience Segment Name 
          type: string  
          enum: [Program Live, C3, C7, Custom] # TODO is Custom a constant?
        viewershipType:
          description: Type of viewership elements
          type: string  
          enum: [VPVH, Composition, Reach, Frequency, Custom] # TODO is Custom a constant?
        universeType:
          description: Type of universe
          type: string  
          enum: [Market, Total US, Coverage, Custom] # TODO is Custom a constant?
        primaryIndicator:
          description: todo # TODO need description
          type: boolean
        Guarantee:
          description: todo # TODO need description
          type: boolean

    audienceMetric: # TODO schema and property have the same name
      description: The audienceMetric schema packages audience segment metric attributes into single object. The properties include (1) a list of pricing metric segments and (2) an audience metric dollar value.
      properties:
        audienceSegmentId:
          description: List of pricing metric segments (AND) # TODO AND what? should there be additional data besides the array of enums specified here?
          type: array
          items:
            type: string 
            enum: [CPM, CPP, Custom] # TODO is Custom a constant?
        audienceMetricValue:
          description: Audience metric dollar value
          type: string  # TODO why is this a string value?

    cancellationTerms:
      description: The cancellationTerms schema packages cancellation options data attributes into a single object. The properties include (1) the quarter name, or broadcast date, dependent on the cancellation type and (2) the amount of time, in both number of days and percentages, to request a cancellation.
      required:
        - cancellationType
        - Cancellation
        - cancellationPriorDays
        - cancellationPercentage
      properties:
        cancellationType:
          description: Type of Cancellation elements
          type: string 
          enum: [Quarterly Option, Rolling Options] 
        Cancellation:
          description: Quarter name or broadcast date dependent on cancellation type
          oneOf:
            - type: string
            - type: string
              format: date-time # TODO is broadcast date a date-time string?
        cancellationPriorDays:
          description: Number of days notice needed prior to start quarter or broadcast date to request cancellation
          type: integer #TODO any constraints on this?
          format: int32
        cancellationPercentage:
          description: Number of days notice needed prior to start quarter or broadcast date to request cancellation
          type: number #TODO any constraints on this?
          format: float

    referenceIds:
      description: The referenceIds schema packages the system IDs across mulitple systems into a single object. The properties include (1) the organization name, (2) reference-source lookup, (3) an ID type, (4) reference-type numbers or IDs, (5) a reference ID version, and (6) a free-form name.
      required:
        - referenceSourceName
        - referenceSourceId
        - referenceType
        - referenceId
      properties:
        referenceSourceName:
          description: Name associated with the organization that is supplying the ids and version information
          type: string #TODO any constraints on this?
        referenceSourceLookup:
          description: Reference Source Look up; this could be URI to lookup information about the refernece source name
          type: string #TODO any constraints on this?
        referenceType:
          description: The type of IDs that are being supplied  
          type: string 
          enum: [RFP, Proposal, Order, Invoice] 
        referenceId:
          description: Number or ID associated with reference type(s) 
          oneOf:
            - type: number #TODO any constraints on this?
            - type: string #TODO any constraints on this?
        referenceVersionId:
          description: Version Number to indicate what version  of the reference id
          type: string #TODO description says version number, should this be a number? any constraints?
        ReferenceName:
          description: Free form name used to identify the type of entity such as Order Name, RFP Name
          type: string #TODO any constraints?

    cpeCode: 
      description: The cpeCode schema packages audience segment metric attributes into single object. The properties include (1) both a client code and product code from the buyer and (2) an estimate code from the buyer.
      properties:
        clientCode:
          description: Client code provided from the buyer. Packages client, product and estimate codes together.
          type: integer #TODO any constraints on this?
          format: int32
        productCode:
          description: Product code provided from the buyer. Packages client, product and estimate codes together.
          type: integer  #TODO any constraints on this?
          format: int32
        estimateCode:
          description: Estimate code provided from the buyer. Packages client, product and estimate codes together.
          type: integer  #TODO any constraints on this?
          format: int32

    broadcastDate:
      description: Packages the Broadcast Date & Time Information
      properties:
        broadcastDate: # TODO listed as conditional in spreadsheet, what does conditional mean?
          description: The broadcast date on which the unit aired/scheduled; UTC Standard; Receiver of data will be responsible to convert based on station's broadcast start of day
          type: string
          format: date-time 
        broadcastTime: # TODO listed as conditional in spreadsheet, what does conditional mean?
          description: The broadcast local time on which the unit aired/scheduled; UTC Standard; Receiver of data will be responsible to convert based on station's broadcast start of day
          type: string  #TODO should this be an enum?

    timeFrame: 
      description: Packages multiple non-contiguous start and end times 
      properties:
        startTime:
          description: Valid start time for units
          type: string
          format: date-time 
        endTime: 
          description: Valid end time for units 
          type: string
          format: date-time 

    Contact: #TODO fixed casing 
      description: Packages contact Information
      required:
        - contactType
        - referenceSourceName
      properties:
        contactType: # TODO type is a reserved word, changed to contactType
          description: Type of Contact
          type: string
          enum: [Type of Contact, Account Executive, Sales Planner, Sales Assistant, Buyer, Billing, Creative, Delivery Service]
        referenceSourceName: 
          description: Name associated with the organization that is supplying the contact information
          type: string
        referenceSourceId: 
          description: ID associated with the organization
          type: string
        contactFirstName: 
          description: Contact First Name
          type: string
        contactLastName: 
          description: Contact Last Name
          type: string
        PhoneNumber: 
          description: Primary telephone number
          type: string
        email: 
          description: Primary email 
          type: string
        effectiveDate: 
          description: Effective date for contact
          type: string
          format: date-time

    inventoryCatalog:
      description: Packages inventory and pricing data together
      required:
        - mediaOutlet
        - SellingTitle
        - mediaType
      properties:
        transactionType:
          description: New, Change or Cancelled transaction
          type: string #TODO should be this an enum?
        mediaOutlet:
          description: the unique identifier for individual station or network
          $ref: '#/components/schemas/mediaOutlet'
        mediaComposition: #TODO what does conditional mean?
          description: If inventory is for a footprint this is the list of stations and /or markets that are within the footprint 
          type: array
          items:
            type: string #TODO is this suppose to be an array of strings? should there be any constraints?
        SellingTitle: # TODO removed space
          description: Selling Title name
          type: string #TODO any constraints on this? 
        Daypart:
          description: Daypart Name
          type: string #TODO any constraints on this? 
        Genre:
          description: The genre into which the selling title is associated to 
          type: string #TODO any constraints on this? 
        Comments:
          description: Comments associated to inventory details 
          type: string #TODO any constraints on this? 
        mediaType:
          description: Type of media being proposed  - Enum values to be defined
          type: string #TODO need the enum types
        pricePeriods:
          description: Array of pricePeriods
          type: array
          items:
            $ref: '#/components/schemas/PricePeriod'
        Audiences:
          description: Array of Audiences
          type: array
          items:
            $ref: '#/components/schemas/Audience'

    PricePeriod:
      required:
        - inventoryType
        - timeFrame
        - DOW
        - Length
        - Rate
      description: Price Period details; multiple arrays of price periods for inventory catalog
      properties:
        inventoryType:
          description: Inventory Type associated to line
          type: string
          enum: [Commercial, Interstitial, Billboard, Custom] #TODO is custom a constant?
        breakPosition:
          description: Break Position
          type: string # TODO enum values to be defined
        podPosition:
          description: Pod Position
          type: string # TODO enum values to be defined
        dateStart:
          description: Price period start date; must be aligned with a weekStart
          type: string
          format: date-time 
        dateEnd: 
          description: Price period end date
          type: string
          format: date-time
        timeFrame:

          description: The valid start and end times
          $ref: '#/components/schemas/timeFrame'
        DOW:
          description: List of valid days of week with Y/N value or number of fixed units per day
          type: string
          enum: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]
        Length:
          description: Unit length 
          type: string
        Rate:
          description: Unit price per a 30 second equivalized spot
          type: number
          format: float
        Currency:
          description: Currency Name or Code
          type: string # TODO should this be an enum?
        Capacity: # TODO updated casing
          description: Total number of original capacities for the inventory catalog
          type: integer # TODO any constraints on this?
          format: int32
        totalUnits:
          description: Total number of "raw" units in inventory catalog available for sale 
          type: integer # TODO any constraints on this?
          format: int32
        requestUnits:
          description: Total number of "raw" units being requested by buyer; required when specifying inventory
          type: integer # TODO any constraints on this?
          format: int32

    Audience: 
      description: Price Period Audience segment details; multiple arrays of audience segments may exist
      properties:
        audienceSegment:
          description: Unique identifier for audience segment
          type: array
          items:
            $ref: '#/components/schemas/audienceSegment'
        sellingEstimates:
          description: Aggregated estimated impression in units for the audience segment for the total units; use the equivalized flag when populating impressions
          type: integer # TODO any constraints on this?
          format: int32
        audienceUniverse:
          description: Estimated impressions in universe for the audience segment and universe type
          type: integer # TODO any constraints on this?
          format: int32
        Rating:
          description: Aggregated estimated GRPs for the total units
          type: integer # TODO any constraints on this?
          format: int32
        viewershipValue:
          description: Viewership value; populated based on the viewership type e.g VPVH, Composition Index, Reach & Frequency
          type: integer # TODO any constraints on this?
          format: int32
        audienceMetric:
          description: Audience metric details 
          type: array
          items:
            $ref: '#/components/schemas/audienceMetric'

    Error:
      required:
        - errorCode
        - errorMessage
      properties:
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string

    acceptedResponse:
      required:
        - transactionId
        - timeStamp
      properties:
        transactionId:
          type: string
        timeStamp:
          type: string
          format: date-time